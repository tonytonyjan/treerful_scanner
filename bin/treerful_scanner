#!/usr/bin/env ruby
# frozen_string_literal: true

require 'treerful_scanner'
require 'date'
require 'optparse'

options = {
  date: (Date.today + 1).to_s,
  places: [],
  place_names: [],
  format: 'terminal',
  volume: 1
}

OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename __FILE__} [options]"
  opts.on('-d DATE', '--date DATE', 'yyyy-mm-dd') do |date|
    options[:date] = date
  end

  opts.on('-n x,y,z', '--place-names x,y,z', Array, 'Filter by place names') do |place_names|
    options[:place_names] = place_names
  end

  opts.on('-p x,y,z', '--places x,y,z', Array, 'Filter by place IDs') do |ids|
    options[:places] = ids
  end

  opts.on('-f FORMAT', '--format FORMAT', '"terminal" (default), "html", "png"') do |format|
    options[:format] = format
  end

  opts.on('-v NUMBER_OF_PEOPLE', '--volume NUMBER_OF_PEOPLE', Integer) do |volume|
    options[:volume] = volume
  end
end.parse!

client = TreerfulScanner::Client.new

place_filter = -> (place) do
  return false if place.volume < options[:volume]
  return false unless options[:place_names].empty? || options[:place_names].any?{ |name| place.name.include?(name) }
  return false unless options[:places].empty? || options[:places].include?(place.id)
  true
end

case options[:format]
when 'terminal'
  printer = TreerfulScanner::Printer.new([], options[:date])
  count = 0
  client.search_by_date(options[:date], place_filter: place_filter) do |table|
    print printer.header if count % 10 == 0
    print printer.row(table)
    count += 1
  end
when 'html'
  time_tables = client.search_by_date(options[:date], place_filter: place_filter)
  printer = TreerfulScanner::HtmlPrinter.new(time_tables, options[:date])
  print printer.print
when 'png'
  time_tables = client.search_by_date(options[:date], place_filter: place_filter)
  printer = TreerfulScanner::PngPrinter.new(time_tables, options[:date])
  print printer.print
else
  raise "unknown format: #{options[:format]}"
end
